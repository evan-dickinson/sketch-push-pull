function isArtboardOrPage(layer) {
  var isArtboard   = [layer isMemberOfClass:[MSArtboardGroup class]];
  var isPage       = [layer isMemberOfClass:[MSPage class]];

  return isArtboard || isPage;
}

function isPlainGroup(layer) {
  var isLayerGroup = [layer isMemberOfClass:[MSLayerGroup class]];
  return isLayerGroup && !isArtboardOrPage(layer);
}


function onPopOut(context) {
  var doc = context.document;
  var selection = context.selection;

  if ([selection count] < 1) {
    [doc showMessage: "No selection"];
    return;
  }
  var toPop = selection[0];
  var ancestors = [toPop ancestors];

  if ([ancestors count] < 2) {
    [doc showMessage: "Not enough ancestors"];
    return;
  }
  var parent = ancestors[[ancestors count] - 1 ];
  var grandparent = ancestors[[ancestors count] - 2];

  var isPlain = isPlainGroup(parent);
  if (!isPlain) {
    [doc showMessage: "Can't pop a layer outside an artboard or page."];
    return;
  }

  var layersToPop = [toPop];
  [MSLayerGroup moveLayers: layersToPop intoGroup: grandparent];
}

function doPushIn(selection) {
  if ([selection count] < 2) {
    var actualCount = [selection count];
    throw("Select 2 or more layers. You selected " +  actualCount);
  }

  // Looks like the selection is sorted by Z axis, from bottom to top
  var destination = selection[0];

  for (idx = 1; idx < selection.length; idx++) {
    var toMove = selection[idx];

    if (isArtboardOrPage(toMove) || isArtboardOrPage(destination)) {
      throw("Push doesn't work with artboards or pages");
    }

    if (!isPlainGroup(destination)) {
      throw("Destination must be a group");
    }

    [MSLayerGroup moveLayers: [toMove] intoGroup: destination];
    //[destination layerDidResize];
  };
}

function onPushIn(context) {
  try {
    doPushIn(context.selection);
  }
  catch (error) {
    if (typeof error === 'string') {
      var doc = context.document;
      [doc showMessage: error];
    }
  }
}



